name: Cloudflare Pages

on: push

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use nodejs
        uses: actions/setup-node@v4

      - name: Install deps
        run: npm ci
        
      - name: Run lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app"
    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use nodejs
        uses: actions/setup-node@v4

      - name: Install deps
        run: npm ci
        
      - name: Run test
        run: npm run test
      
      - name: Report coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          working-directory: "./app"

  build:
    needs: ["lint", "test"]
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use nodejs
        uses: actions/setup-node@v4

      - name: Install deps
        run: npm ci
        
      - name: Run build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: app/dist/

  deploy:
    needs: ["build"]
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: "./app"
    permissions:
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-dist
          path: ./app/dist

      - name: Use nodejs
        uses: actions/setup-node@v4

      - name: Install deps
        run: npm ci

      - name: Deploy        
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          workingDirectory: "./app"